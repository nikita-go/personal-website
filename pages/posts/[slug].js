import React from "react";
import Head from "next/head";
import Link from "next/link";
import { Header } from "../../components/global/Header";
import { Footer } from "../../components/global/Footer";
import fs from "fs";
import matter from "gray-matter";
import ReactMarkdown from "react-markdown";
import remarkMath from "remark-math";
import rehypeKatex from "rehype-katex";

export default function Post({ frontmatter, content }) {
    console.log(frontmatter);
    console.log(content);
    return (
        <>
            <Head>
                <title>{frontmatter.title} | Nikita Gorshkov</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex flex-col min-h-screen">
                <Header />
                <div className="flex mx-[20%] flex-col mt-12 grow">
                    <div className="flex flex-col gap-y-1 pb-6">
                        <h1 className="text-white text-5xl font-bold">{frontmatter.title}</h1>
                        <div className="flex flex-row justify-between text-xl">
                            <p className="text-gray-300">Nikita Gorshkov | {new Date(frontmatter.date).toLocaleString("en-US", 
                                {
                                    year: "numeric",
                                    month: "long",
                                    day: "numeric",
                                })}
                            </p>
                            <div>
                                {frontmatter.tags.map((tag, tagIndex) => (
                                    <span key={tag} className="text-[#5187df] hover:text-[#5d9bff] ease-in-out transition duration-300">
                                        <Link href={`/posts?tag=${tag}`}>{tag}</Link>
                                        {tagIndex!=frontmatter.tags.length-1 && <span className="mx-1">â€¢</span>}
                                    </span>
                                ))}
                            </div>
                        </div>
                        <Link href="/posts" className="text-lg text-gray-300 hover:text-gray-100 ease-in-out transition duration-300">&larr; Back to posts</Link>
                    </div>
                    <div className="py-6 border-t-2 border-white">
                        <article className="prose prose-lg prose-invert prose-a:text-[#5187df]"><ReactMarkdown 
                            rehypePlugins={[rehypeKatex]}
                            remarkPlugins={[remarkMath]}>
                            {content}
                            </ReactMarkdown>
                        </article>
                    </div>
                </div>
                <Footer />
            </main>
        </>
    )
}

export async function getStaticPaths() {
    const files = fs.readdirSync(`${process.cwd()}/posts`, "utf-8");
    const paths = files.map((file) => ({
        params: {
            slug: file.replace(".md", ""),
        },
    }));
    return {
        paths,
        fallback: false,
    }
}

export async function getStaticProps({ params: {slug} }) {
    const fileName = fs.readFileSync(`${process.cwd()}/posts/${slug}.md`, "utf-8");
    const { data: frontmatter, content } = matter(fileName);
    return {
        props: {
            frontmatter,
            content,
        },
    }
}